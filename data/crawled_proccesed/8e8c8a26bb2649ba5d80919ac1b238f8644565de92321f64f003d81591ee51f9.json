{
	"add": {
		"doc": {
			"id": "8e8c8a26bb2649ba5d80919ac1b238f8644565de92321f64f003d81591ee51f9",
			"url": "https://upload.wikimedia.org/math/6/b/9/6b92c00cd15e1684d410c12c4bdc7a4f.png",
			"previous": " Formally the ISBN 13 check digit calculation is ",
			"after": " This check system similar to the UPC check digit formula does not catch all errors of adjacent digit transposition Specifically if the difference between two adjacent digits is 5 the check digit will not catch their transposition For instance the above example allows this situation with the 6 followed by a 1 The correct order contributes 3 6 1 1 19 to the sum while if the digits are transposed 1 followed by a 6 the contribution of those two digits will be 3 1 1 6 9 However 19 and 9 are congruent modulo 10 and so produce the same final result both ISBNs will have a check digit of 7 The ISBN 10 formula uses the prime modulus 11 which avoids this blind spot but requires more than the digits 0 9 to express the check digit ",
			"color": "dim|0.38622 gray|0.38622 dim|0.38622 grey|0.38622 gray|0.27263 grey|0.27263 dark|0.17685 gray|0.17685 dark|0.17685 grey|0.17685 silver|0.07932 light|0.040588 gray|0.040588 light|0.040588 grey|0.040588 gainsboro|0.028944 white|0.0041763 smoke|0.0041763  ",
			"after_weights": " This|1 check|0.99281 system|0.98561 similar|0.97842 to|0.97122 the|0.96403 UPC|0.95683 check|0.94964 digit|0.94245 formula|0.93525 does|0.92806 not|0.92086 catch|0.91367 all|0.90647 errors|0.89928 of|0.89209 adjacent|0.88489 digit|0.8777 transposition|0.8705 Specifically|0.86331 if|0.85612 the|0.84892 difference|0.84173 between|0.83453 two|0.82734 adjacent|0.82014 digits|0.81295 is|0.80576 5|0.79856 the|0.79137 check|0.78417 digit|0.77698 will|0.76978 not|0.76259 catch|0.7554 their|0.7482 transposition|0.74101 For|0.73381 instance|0.72662 the|0.71942 above|0.71223 example|0.70504 allows|0.69784 this|0.69065 situation|0.68345 with|0.67626 the|0.66906 6|0.66187 followed|0.65468 by|0.64748 a|0.64029 1|0.63309 The|0.6259 correct|0.61871 order|0.61151 contributes|0.60432 3|0.59712 6|0.58993 1|0.58273 1|0.57554 19|0.56835 to|0.56115 the|0.55396 sum|0.54676 while|0.53957 if|0.53237 the|0.52518 digits|0.51799 are|0.51079 transposed|0.5036 1|0.4964 followed|0.48921 by|0.48201 a|0.47482 6|0.46763 the|0.46043 contribution|0.45324 of|0.44604 those|0.43885 two|0.43165 digits|0.42446 will|0.41727 be|0.41007 3|0.40288 1|0.39568 1|0.38849 6|0.38129 9|0.3741 However|0.36691 19|0.35971 and|0.35252 9|0.34532 are|0.33813 congruent|0.33094 modulo|0.32374 10|0.31655 and|0.30935 so|0.30216 produce|0.29496 the|0.28777 same|0.28058 final|0.27338 result|0.26619 both|0.25899 ISBNs|0.2518 will|0.2446 have|0.23741 a|0.23022 check|0.22302 digit|0.21583 of|0.20863 7|0.20144 The|0.19424 ISBN|0.18705 10|0.17986 formula|0.17266 uses|0.16547 the|0.15827 prime|0.15108 modulus|0.14388 11|0.13669 which|0.1295 avoids|0.1223 this|0.11511 blind|0.10791 spot|0.10072 but|0.093525 requires|0.086331 more|0.079137 than|0.071942 the|0.064748 digits|0.057554 0|0.05036 9|0.043165 to|0.035971 express|0.028777 the|0.021583 check|0.014388 digit|0.0071942 |0",
			"previous_weights": " Formally|0 the|0.125 ISBN|0.25 13|0.375 check|0.5 digit|0.625 calculation|0.75 is|0.875 |1"
		}
	}
}
