{
	"add": {
		"doc": {
			"id": "632c001546e3fe4841cf3759d4d8a307713fe2a4edd490c7f07cf6cb6d572e87",
			"url": "https://upload.wikimedia.org/math/b/7/1/b7118a777168022f01f7439db6d769ad.png",
			"previous": " ",
			"after": " Conversely there are algorithms which run in a number of Turing machine steps bounded by a polynomial in the length of binary encoded input but do not take a number of arithmetic operations bounded by a polynomial in the number of input numbers The Euclidean algorithm for computing the greatest common divisor of two integers is one example Given two integers and the running time of the algorithm is bounded by Turing machine steps This is polynomial in the size of a binary representation of and as the size of such a representation is roughly At the same time the number of arithmetic operations cannot be bound by the number of integers in the input which is constant in this case there are always only two integers in the input Due to the latter observation the algorithm does not run in strongly polynomial time Its real running time depends on the magnitudes of and and not only on the number of integers in the input ",
			"color": " ",
			"after_weights": " Conversely|1 there|0.99394 are|0.98788 algorithms|0.98182 which|0.97576 run|0.9697 in|0.96364 a|0.95758 number|0.95152 of|0.94545 Turing|0.93939 machine|0.93333 steps|0.92727 bounded|0.92121 by|0.91515 a|0.90909 polynomial|0.90303 in|0.89697 the|0.89091 length|0.88485 of|0.87879 binary|0.87273 encoded|0.86667 input|0.86061 but|0.85455 do|0.84848 not|0.84242 take|0.83636 a|0.8303 number|0.82424 of|0.81818 arithmetic|0.81212 operations|0.80606 bounded|0.8 by|0.79394 a|0.78788 polynomial|0.78182 in|0.77576 the|0.7697 number|0.76364 of|0.75758 input|0.75152 numbers|0.74545 The|0.73939 Euclidean|0.73333 algorithm|0.72727 for|0.72121 computing|0.71515 the|0.70909 greatest|0.70303 common|0.69697 divisor|0.69091 of|0.68485 two|0.67879 integers|0.67273 is|0.66667 one|0.66061 example|0.65455 Given|0.64848 two|0.64242 integers|0.63636 and|0.6303 the|0.62424 running|0.61818 time|0.61212 of|0.60606 the|0.6 algorithm|0.59394 is|0.58788 bounded|0.58182 by|0.57576 Turing|0.5697 machine|0.56364 steps|0.55758 This|0.55152 is|0.54545 polynomial|0.53939 in|0.53333 the|0.52727 size|0.52121 of|0.51515 a|0.50909 binary|0.50303 representation|0.49697 of|0.49091 and|0.48485 as|0.47879 the|0.47273 size|0.46667 of|0.46061 such|0.45455 a|0.44848 representation|0.44242 is|0.43636 roughly|0.4303 At|0.42424 the|0.41818 same|0.41212 time|0.40606 the|0.4 number|0.39394 of|0.38788 arithmetic|0.38182 operations|0.37576 cannot|0.3697 be|0.36364 bound|0.35758 by|0.35152 the|0.34545 number|0.33939 of|0.33333 integers|0.32727 in|0.32121 the|0.31515 input|0.30909 which|0.30303 is|0.29697 constant|0.29091 in|0.28485 this|0.27879 case|0.27273 there|0.26667 are|0.26061 always|0.25455 only|0.24848 two|0.24242 integers|0.23636 in|0.2303 the|0.22424 input|0.21818 Due|0.21212 to|0.20606 the|0.2 latter|0.19394 observation|0.18788 the|0.18182 algorithm|0.17576 does|0.1697 not|0.16364 run|0.15758 in|0.15152 strongly|0.14545 polynomial|0.13939 time|0.13333 Its|0.12727 real|0.12121 running|0.11515 time|0.10909 depends|0.10303 on|0.09697 the|0.090909 magnitudes|0.084848 of|0.078788 and|0.072727 and|0.066667 not|0.060606 only|0.054545 on|0.048485 the|0.042424 number|0.036364 of|0.030303 integers|0.024242 in|0.018182 the|0.012121 input|0.0060606 |0",
			"previous_weights": " "
		}
	}
}
