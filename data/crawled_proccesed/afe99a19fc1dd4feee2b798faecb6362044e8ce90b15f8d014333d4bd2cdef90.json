{
	"add": {
		"doc": {
			"id": "afe99a19fc1dd4feee2b798faecb6362044e8ce90b15f8d014333d4bd2cdef90",
			"url": "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0e/Hard_reset_BBC_Micro_32K_Acorn_DFS.gif/220px-Hard_reset_BBC_Micro_32K_Acorn_DFS.gif",
			"previous": " ",
			"after": " The built in ROM resident BBC BASIC programming language interpreter realised the system s educational emphasis and was key to its success not only was it the most comprehensive BASIC compared to other contemporary implementations but it ran very efficiently and was therefore fast Advanced programs could be written without resorting to non structured programming or machine code necessary with many competing computers Should one want or need to do some assembly programming BBC BASIC featured a built in assembler that allowed a very easy mixture of BBC BASIC and assembler for whatever processor BBC BASIC was operating on ",
			"after_weights": " The|1 built|0.9899 in|0.9798 ROM|0.9697 resident|0.9596 BBC|0.94949 BASIC|0.93939 programming|0.92929 language|0.91919 interpreter|0.90909 realised|0.89899 the|0.88889 system|0.87879 s|0.86869 educational|0.85859 emphasis|0.84848 and|0.83838 was|0.82828 key|0.81818 to|0.80808 its|0.79798 success|0.78788 not|0.77778 only|0.76768 was|0.75758 it|0.74747 the|0.73737 most|0.72727 comprehensive|0.71717 BASIC|0.70707 compared|0.69697 to|0.68687 other|0.67677 contemporary|0.66667 implementations|0.65657 but|0.64646 it|0.63636 ran|0.62626 very|0.61616 efficiently|0.60606 and|0.59596 was|0.58586 therefore|0.57576 fast|0.56566 Advanced|0.55556 programs|0.54545 could|0.53535 be|0.52525 written|0.51515 without|0.50505 resorting|0.49495 to|0.48485 non|0.47475 structured|0.46465 programming|0.45455 or|0.44444 machine|0.43434 code|0.42424 necessary|0.41414 with|0.40404 many|0.39394 competing|0.38384 computers|0.37374 Should|0.36364 one|0.35354 want|0.34343 or|0.33333 need|0.32323 to|0.31313 do|0.30303 some|0.29293 assembly|0.28283 programming|0.27273 BBC|0.26263 BASIC|0.25253 featured|0.24242 a|0.23232 built|0.22222 in|0.21212 assembler|0.20202 that|0.19192 allowed|0.18182 a|0.17172 very|0.16162 easy|0.15152 mixture|0.14141 of|0.13131 BBC|0.12121 BASIC|0.11111 and|0.10101 assembler|0.090909 for|0.080808 whatever|0.070707 processor|0.060606 BBC|0.050505 BASIC|0.040404 was|0.030303 operating|0.020202 on|0.010101 |0",
			"previous_weights": " "
		}
	}
}
