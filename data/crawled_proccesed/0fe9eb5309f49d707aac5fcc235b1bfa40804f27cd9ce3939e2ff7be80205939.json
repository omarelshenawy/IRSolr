{
	"add": {
		"doc": {
			"id": "0fe9eb5309f49d707aac5fcc235b1bfa40804f27cd9ce3939e2ff7be80205939",
			"url": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/DHT_en.svg/250px-DHT_en.svg.png",
			"previous": " The most common type of structured P2P networks implement a distributed hash table DHT 18 19 in which a variant of consistent hashing is used to assign ownership of each file to a particular peer 20 21 This enables peers to search for resources on the network using a hash table that is key value pairs are stored in the DHT and any participating node can efficiently retrieve the value associated with a given key 22 23 ",
			"after": " However in order to route traffic efficiently through the network nodes in a structured overlay must maintain lists of neighbors that satisfy specific criteria This makes them less robust in networks with a high rate of churn i e with large numbers of nodes frequently joining and leaving the network 15 24 More recent evaluation of P2P resource discovery solutions under real workloads have pointed out several issues in DHT based solutions such as high cost of advertising discovering resources and static and dynamic load imbalance 25 ",
			"color": "aqua|0.16855 cyan|0.16855 khaki|0.064995 dark|0.063975 khaki|0.063975 dark|0.061321 turquoise|0.061321 light|0.060712 sea|0.060712 green|0.060712 medium|0.058763 turquoise|0.058763 black|0.056271 chocolate|0.04537 dark|0.031084 cyan|0.031084 dim|0.02503 gray|0.02503 dim|0.02503 grey|0.02503 teal|0.021401 thistle|0.020127 gray|0.017778 grey|0.017778 turquoise|0.014738 silver|0.012819 light|0.0092418 gray|0.0092418 light|0.0092418 grey|0.0092418 sienna|0.0091654 saddle|0.0089827 brown|0.0089827 dark|0.0087797 gray|0.0087797 dark|0.0087797 grey|0.0087797 powder|0.0083382 blue|0.0083382 pale|0.0078713 golden|0.0078713 rod|0.0078713 light|0.0072775 steel|0.0072775 blue|0.0072775 gainsboro|0.007167 cadet|0.0066939 blue|0.0066939  ",
			"after_weights": " However|1 in|0.98851 order|0.97701 to|0.96552 route|0.95402 traffic|0.94253 efficiently|0.93103 through|0.91954 the|0.90805 network|0.89655 nodes|0.88506 in|0.87356 a|0.86207 structured|0.85057 overlay|0.83908 must|0.82759 maintain|0.81609 lists|0.8046 of|0.7931 neighbors|0.78161 that|0.77011 satisfy|0.75862 specific|0.74713 criteria|0.73563 This|0.72414 makes|0.71264 them|0.70115 less|0.68966 robust|0.67816 in|0.66667 networks|0.65517 with|0.64368 a|0.63218 high|0.62069 rate|0.6092 of|0.5977 churn|0.58621 i|0.57471 e|0.56322 with|0.55172 large|0.54023 numbers|0.52874 of|0.51724 nodes|0.50575 frequently|0.49425 joining|0.48276 and|0.47126 leaving|0.45977 the|0.44828 network|0.43678 15|0.42529 24|0.41379 More|0.4023 recent|0.3908 evaluation|0.37931 of|0.36782 P2P|0.35632 resource|0.34483 discovery|0.33333 solutions|0.32184 under|0.31034 real|0.29885 workloads|0.28736 have|0.27586 pointed|0.26437 out|0.25287 several|0.24138 issues|0.22989 in|0.21839 DHT|0.2069 based|0.1954 solutions|0.18391 such|0.17241 as|0.16092 high|0.14943 cost|0.13793 of|0.12644 advertising|0.11494 discovering|0.10345 resources|0.091954 and|0.08046 static|0.068966 and|0.057471 dynamic|0.045977 load|0.034483 imbalance|0.022989 25|0.011494 |0",
			"previous_weights": " The|0 most|0.012987 common|0.025974 type|0.038961 of|0.051948 structured|0.064935 P2P|0.077922 networks|0.090909 implement|0.1039 a|0.11688 distributed|0.12987 hash|0.14286 table|0.15584 DHT|0.16883 18|0.18182 19|0.19481 in|0.20779 which|0.22078 a|0.23377 variant|0.24675 of|0.25974 consistent|0.27273 hashing|0.28571 is|0.2987 used|0.31169 to|0.32468 assign|0.33766 ownership|0.35065 of|0.36364 each|0.37662 file|0.38961 to|0.4026 a|0.41558 particular|0.42857 peer|0.44156 20|0.45455 21|0.46753 This|0.48052 enables|0.49351 peers|0.50649 to|0.51948 search|0.53247 for|0.54545 resources|0.55844 on|0.57143 the|0.58442 network|0.5974 using|0.61039 a|0.62338 hash|0.63636 table|0.64935 that|0.66234 is|0.67532 key|0.68831 value|0.7013 pairs|0.71429 are|0.72727 stored|0.74026 in|0.75325 the|0.76623 DHT|0.77922 and|0.79221 any|0.80519 participating|0.81818 node|0.83117 can|0.84416 efficiently|0.85714 retrieve|0.87013 the|0.88312 value|0.8961 associated|0.90909 with|0.92208 a|0.93506 given|0.94805 key|0.96104 22|0.97403 23|0.98701 |1"
		}
	}
}
