{"add":{"doc":{"id":"c13bd5064762eea52fa0d2b432eb6c7a98f5e49c7afdc1793809342fed4f4ec8","url":"https://upload.wikimedia.org/math/c/1/6/c16e33e7d766553b99a856a48ad25a5a.png","previous":["Any algorithm with these two properties can be converted to a polynomial time algorithm by replacing the arithmetic operations by suitable algorithms for performing the arithmetic operations on a Turing machine. If the second of the above requirement is not met, then this is not true anymore. Given the integer (which takes up space proportional to n in the Turing machine model), it is possible to compute with n multiplications using repeated squaring. However, the space used to represent is proportional to , and thus exponential rather than polynomial in the space used to represent the input. Hence, it is not possible to carry out this computation in polynomial time on a Turing machine, but it is possible to compute it by polynomially many arithmetic operations."],"after":["An algorithm which runs in polynomial time but which is not strongly polynomial is said to run in weakly polynomial time.[11] A well-known example of a problem for which a weakly polynomial-time algorithm is known, but is not known to admit a strongly polynomial-time algorithm, is linear programming. Weakly polynomial-time should not be confused with pseudo-polynomial time."]}}}